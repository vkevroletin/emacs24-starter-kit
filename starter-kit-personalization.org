#+TITLE: Personalization
#+OPTIONS: toc:2 num:nil ^:nil

* Why

I share my Emacs configuration between work and home machines. Using
machine or user specific configuration is not convenient because
on working machine I use corporative user account with strange name
which I don't want to use at home.

* Enable Starter Kit parts
   :PROPERTIES:
   :CUSTOM_ID: starter-kit-enabled-parts
   :END:

- Disable menu bar
  #+begin_src emacs-lisp
    (starter-kit-load "misc-recommended")
  #+end_src

- Org mode configured to own GTD-like workflow
  #+begin_src emacs-lisp
    (starter-kit-load "org")
  #+end_src

- Yasnippet: type word and press TAB to expand
  #+begin_src emacs-lisp
    (starter-kit-load "yasnippet")
  #+end_src

- Haskell. This requires installation of external software.
  #+begin_src emacs-lisp
    (starter-kit-load "haskell")
  #+end_src

- Helm. Interactive fuzzy matching for every day emacs commands.
  #+begin_src emacs-lisp
    (starter-kit-load "helm")
  #+end_src

- Cpp mode
  #+begin_src emacs-lisp
    (starter-kit-load "cpp")
  #+end_src

- Lisp
  #+begin_src emacs-lisp
    (starter-kit-load "lisp")
  #+end_src

* Improve appearance                                    :manual_installation:

- Enable theme

  Theme should be loaded after custom (because custom stores hash sum to
  enable selected theme).

  An Emacs port of the Atom Dark theme from Atom.io. Currently there
  is no automated theme installation in Starter Kit so you need to
  enable it by hands:
  + M-x customize-themes
  #+begin_src emacs-lisp
    (starter-kit-install-if-needed 'atom-dark-theme)
  #+end_src

- Disable scroll bar
  #+begin_src emacs-lisp
    (scroll-bar-mode -1)
  #+end_src

* Improve compile command

- Problems of default compile command

  Default ~compile~ stores last compilation command and directory.
  Following calls to ~recompile~ use them so you can repeat exactly same
  compilation from other directory. This approach works well unless you
  edit several projects in same time.

- Enhanced compile command
  + Asks for directory instead of using current directory. So you
    don't have to ~cd~.
  + Combines ~compile~ and ~recompile~ in same function. First call
    asks for directory and command, successive calls just recompile.
  + Knows about projects defined by Projectile
    Separate pairs of directory/command per project.
  + Persists cache between sessions.
#+begin_src emacs-lisp
  (require 'compile-per-project)
  (fset 'compile 'compile-per-project)
#+end_src

* Basic keybinding

We are going to avoid movement of right hand to right part of keyboard.

- Buffers cycling is useful combination
  #+begin_src emacs-lisp
    (global-set-key (kbd "C-<") 'previous-buffer)
    (global-set-key (kbd "C->") 'next-buffer)
  #+end_src

- Delete character backward is one of the most important keys.

  C-M-h is standard combination to delete word backward. C-h hows help
  which is extremely useful Emacs feature. Let's use M-h to delete
  character backward.
  #+begin_src emacs-lisp
    (global-set-key (kbd "M-h") 'backward-delete-char-untabify)
    (require 'org)
    (define-key org-mode-map (kbd "M-h") 'backward-delete-char-untabify)
  #+end_src

* Fight tabs and white spaces

- Good bye trailing white spaces
  #+begin_src emacs-lisp
    (add-hook 'before-save-hook 'delete-trailing-whitespace)
  #+end_src

* Environment fixes

+ Emacs can't execute some programs which are available from command
  line on my Linux machine
  #+begin_src emacs-lisp
    (unless (eq system-type 'windows-nt)
      (starter-kit-install-if-needed 'exec-path-from-shell)
      (exec-path-from-shell-initialize))
  #+end_src

* Enable masked commands

#+begin_src emacs-lisp
  (put 'narrow-to-region 'disabled nil)
#+end_src
